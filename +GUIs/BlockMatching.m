classdef BlockMatching < GUIs.base
%BLOCKMATCHING Summary of this class goes here
%   Detailed explanation goes here

    properties
        hInputImageAxes
        hOutputImageAxes
        hMotionVectorsImageAxes
        hResidualImageAxes
        hCurrentBlock
        hTargetBlock
        hResidualBlock
        hPlayPauseButton
        hStepButton
        hFrameNumberCombo
        hSearchTypeCombo

        hResultsTable
    end

    methods
        function obj = BlockMatching()
            obj = obj@GUIs.base('Motion Estimation: Block Matching');

            obj.createInputVideoSelectComboBoxAndText([0.01 0.95 0.1 0.03], [0.1 0.95 0.25 0.03]);

            obj.hFrameNumberCombo = uicontrol('Style', 'popupmenu', ...
                                        'Parent', obj.hExternalPanel, ...
                                        'FontSize', 11, ...
                                        'FontName', 'Helvetica',...
                                        'Units', 'Normalized', ...
                                        'Position',[0.36 0.95 0.1 0.03],...
                                        'String', {'1'},...
                                        'Callback', @(source, event)(obj.changeFrameNumber(source)));
            obj.hSearchTypeCombo = uicontrol('Style', 'popupmenu', ...
                                        'Parent', obj.hExternalPanel, ...
                                        'FontSize', 11, ...
                                        'FontName', 'Helvetica',...
                                        'Units', 'Normalized', ...
                                        'Position',[0.46 0.95 0.25 0.03],...
                                        'String', {'Diamond Search (DSA)' 'Full Search (FSA)'},...
                                        'Callback', @(source, event)(obj.changeSearchType(source)));

            % Step
            % Free run
            obj.hPlayPauseButton = uicontrol('Style', 'togglebutton', ...
                                    'Parent', obj.hExternalPanel, ...
                                    'FontSize', 9, ...
                                    'FontName', 'Helvetica',...
                                    'Units', 'Normalized', ...
                                    'Position',[0.72 0.95 0.1 0.03],...
                                    'String', 'Pause',...
                                    'Value', 1,...
                                    'Callback', @(source, event)(obj.togglePlayVideo(source)));
            obj.hStepButton = uicontrol('Style', 'pushbutton', ...
                                    'Parent', obj.hExternalPanel, ...
                                    'FontSize', 9, ...
                                    'FontName', 'Helvetica',...
                                    'Units', 'Normalized', ...
                                    'Position',[0.82 0.95 0.1 0.03],...
                                    'String', 'Step 1 Block',...
                                    'Value', 1,...
                                    'Callback', @(source, event)(obj.showNextFrame()));

            obj.createTextElement([0.01 0.91 0.2 0.03], 'Input Image', 11, 'on', 'white', obj.hExternalPanel, 'FontName', 'Courier New'); %, 'HorizontalAlignment', 'center',
            obj.hInputImageAxes = obj.createAxesForImage([.01 .51 .30 .40]);
            obj.createTextElement([0.32 0.91 0.2 0.03], 'Search Pattern', 11, 'on', 'white', obj.hExternalPanel, 'FontName', 'Courier New');
            obj.hOutputImageAxes = obj.createAxesForImage([.32 .51 .30 .40]);
            obj.createTextElement([0.01 0.46 0.2 0.03], 'Motion Vectors', 11, 'on', 'white', obj.hExternalPanel, 'FontName', 'Courier New');
            obj.hMotionVectorsImageAxes = obj.createAxesForImage([.01 .01 .30 .45]);
            obj.createTextElement([0.32 0.46 0.2 0.03], 'Residual Frame', 11, 'on', 'white', obj.hExternalPanel, 'FontName', 'Courier New');
            obj.hResidualImageAxes = obj.createAxesForImage([.32 .01 .30 .45]);

            obj.createTextElement([0.66 0.74 0.08 0.15], 'Current Block', 11, 'on', 'white', obj.hExternalPanel, 'FontName', 'Courier New');
            obj.hCurrentBlock = obj.createAxesForImage([.75 .74 .15 .15]);
            obj.createTextElement([0.66 0.58 0.08 0.15], 'Reference Block', 11, 'on', 'white', obj.hExternalPanel, 'FontName', 'Courier New');
            obj.hTargetBlock = obj.createAxesForImage([.75 .58 .15 .15]);
            obj.createTextElement([0.66 0.41 0.08 0.15], 'Residual Block', 11, 'on', 'white', obj.hExternalPanel, 'FontName', 'Courier New');
            obj.hResidualBlock = obj.createAxesForImage([.75 .41 .15 .15]);

            obj.createTextElement([0.7 0.32 0.25 0.03], 'Error at each location in search', 10, 'on', 'white', obj.hExternalPanel, 'FontName', 'helvetica');
            obj.hResultsTable = uitable('Data',[1 2; 1 2; 1 2;], ...
                                        'ColumnName', {'Location', 'Error'}, ...
                                        'Parent', obj.hExternalPanel, ...
                                        'Units', 'Normalized', ...
                                        'RowStriping', 'on', ...
                                        'RowName', [],...
                                        'FontSize', 10,...
                                        'FontName', 'Courier New',...
                                        'ColumnWidth', num2cell(ones(1,2).*80), ...
                                        'Position', [0.7 0.01 0.25 0.30]);
        end

        function changeVideoInput(obj, source)

        end
    end
end 
